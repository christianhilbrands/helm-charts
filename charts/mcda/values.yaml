replicaCount: 1

image:
  repository: addis/mcda
  pullPolicy: IfNotPresent
  tag: "test"

patavi:
  apiKey: xxxxx
  host: patavi-patavi-server.patavi.svc
  port: 3000

postgresql:
  postgresqlUsername: mcda
  postgresqlDatabase: mcda
  postgresqlPassword: xxxxx
  postgresqlPostgresPassword: xxxxx
  persistence:
    useExistingClaim: false
  #   existingClaim: data-patavi-server-postgresql-0
    storageClass: nfs-provisioner-retain
  image:
    debug: false

mcda:
  googleKey: xxxx
  googleSecret: xxxx
  cookieSecret: xxxx
  host: https://mcda.dev.molgenis.org
  secure: false
  authenticationMethod: GOOGLE
  schema:
    version: develop
  enterprise:
    cookieDomain: dev.molgenis.org
    enabled: false
    survey:
      host: http://survey.dev.molgenis.org
    # adminPassword: xxxx

survey:
  image: 
    repository: registry.drugis.org/mcda-survey
    tag: test
  patavi:
    port: 3000
    host: patavi-patavi-server.patavi.svc
  postgresql:
    postgresqlHost: enterprise-mcda-postgresql
    postgresqlUsername: mcda
    postgresqlDatabase: mcda
    existingSecret: enterprise-mcda-postgresql
  mcda:
    cookieDomain: dev.molgenis.org
    host: https://mcda-enterprise.dev.molgenis.org
    existingSecret: secret-enterprise-mcda
  ingress:
    enabled: true
    hosts:
      - host: survey.dev.molgenis.org

backup:
  enabled: true
  cron: "0 2 * * *"
  persistence:
    enabled: true
    storageClass: "nfs-provisioner-retain"
    accessMode: ReadWriteOnce
    size: 5Gi
    useExistingClaim: false
    # existingClaim: mcda-backup

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 3002

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: mcda.dev.molgenis.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
